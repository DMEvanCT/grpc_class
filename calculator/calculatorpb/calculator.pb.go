// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculatorpb/calculator.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SquareRootReq struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootReq) Reset()         { *m = SquareRootReq{} }
func (m *SquareRootReq) String() string { return proto.CompactTextString(m) }
func (*SquareRootReq) ProtoMessage()    {}
func (*SquareRootReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87e717c78a24322a, []int{0}
}

func (m *SquareRootReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootReq.Unmarshal(m, b)
}
func (m *SquareRootReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootReq.Marshal(b, m, deterministic)
}
func (m *SquareRootReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootReq.Merge(m, src)
}
func (m *SquareRootReq) XXX_Size() int {
	return xxx_messageInfo_SquareRootReq.Size(m)
}
func (m *SquareRootReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootReq.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootReq proto.InternalMessageInfo

func (m *SquareRootReq) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootResp struct {
	NumberRoot           float64  `protobuf:"fixed64,1,opt,name=number_root,json=numberRoot,proto3" json:"number_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootResp) Reset()         { *m = SquareRootResp{} }
func (m *SquareRootResp) String() string { return proto.CompactTextString(m) }
func (*SquareRootResp) ProtoMessage()    {}
func (*SquareRootResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87e717c78a24322a, []int{1}
}

func (m *SquareRootResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootResp.Unmarshal(m, b)
}
func (m *SquareRootResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootResp.Marshal(b, m, deterministic)
}
func (m *SquareRootResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootResp.Merge(m, src)
}
func (m *SquareRootResp) XXX_Size() int {
	return xxx_messageInfo_SquareRootResp.Size(m)
}
func (m *SquareRootResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootResp.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootResp proto.InternalMessageInfo

func (m *SquareRootResp) GetNumberRoot() float64 {
	if m != nil {
		return m.NumberRoot
	}
	return 0
}

func init() {
	proto.RegisterType((*SquareRootReq)(nil), "calculator.SquareRootReq")
	proto.RegisterType((*SquareRootResp)(nil), "calculator.SquareRootResp")
}

func init() { proto.RegisterFile("calculatorpb/calculator.proto", fileDescriptor_87e717c78a24322a) }

var fileDescriptor_87e717c78a24322a = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0x4e, 0xcc, 0x49,
	0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0x2f, 0x2a, 0x48, 0xd2, 0x47, 0x70, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b,
	0xf2, 0x85, 0xb8, 0x10, 0x22, 0x4a, 0xea, 0x5c, 0xbc, 0xc1, 0x85, 0xa5, 0x89, 0x45, 0xa9, 0x41,
	0xf9, 0xf9, 0x25, 0x41, 0xa9, 0x85, 0x42, 0x62, 0x5c, 0x6c, 0x79, 0xa5, 0xb9, 0x49, 0xa9, 0x45,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x50, 0x9e, 0x92, 0x21, 0x17, 0x1f, 0xb2, 0xc2, 0xe2,
	0x02, 0x21, 0x79, 0x2e, 0x6e, 0x88, 0x5c, 0x7c, 0x51, 0x7e, 0x7e, 0x09, 0x58, 0x39, 0x63, 0x10,
	0x17, 0x44, 0x08, 0xa4, 0xc8, 0x28, 0x8a, 0x4b, 0xd0, 0x19, 0x6e, 0x53, 0x70, 0x6a, 0x51, 0x59,
	0x66, 0x72, 0xaa, 0x90, 0x2b, 0x17, 0x17, 0xc2, 0x1c, 0x21, 0x49, 0x3d, 0x24, 0xd7, 0xa1, 0x38,
	0x44, 0x4a, 0x0a, 0x97, 0x54, 0x71, 0x81, 0x12, 0x83, 0x13, 0x47, 0x14, 0x1b, 0x48, 0xba, 0x20,
	0x29, 0x89, 0x0d, 0xec, 0x29, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x33, 0xa8, 0x25,
	0xf5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	SquareRoot(ctx context.Context, in *SquareRootReq, opts ...grpc.CallOption) (*SquareRootResp, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) SquareRoot(ctx context.Context, in *SquareRootReq, opts ...grpc.CallOption) (*SquareRootResp, error) {
	out := new(SquareRootResp)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	SquareRoot(context.Context, *SquareRootReq) (*SquareRootResp, error)
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, req.(*SquareRootReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SquareRoot",
			Handler:    _CalculatorService_SquareRoot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculatorpb/calculator.proto",
}
